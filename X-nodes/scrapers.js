/*COPYRIGHT (C) 2022 CODED BY NOIZE */
const Garfield=require("../events"),{MessageType:MessageType,Mimetype:Mimetype}=require("@adiwajshing/baileys"),translatte=require("translatte"),config=require("../config"),xv364=require("../X-364"),LanguageDetect=require("languagedetect"),lngDetector=new LanguageDetect,Heroku=require("heroku-client"),heroku=new Heroku({token:config.HEROKU.API_KEY});let baseURI="/apps/"+config.HEROKU.APP_NAME;const axios=require("axios"),{requestLyricsFor:requestLyricsFor,requestAuthorFor:requestAuthorFor,requestTitleFor:requestTitleFor,requestIconFor:requestIconFor}=require("solenolyrics"),solenolyrics=require("solenolyrics"),{exchangeRates:exchangeRates}=require("exchange-rates-api"),ExchangeRatesError=require("exchange-rates-api/src/exchange-rates-error.js"),fs=require("fs"),https=require("https"),googleTTS=require("google-translate-tts"),ytdl=require("ytdl-core"),ffmpeg=require("fluent-ffmpeg"),yts=require("yt-search"),got=require("got"),ID3Writer=require("browser-id3-writer"),SpotifyWebApi=require("spotify-web-api-node"),spotifyApi=new SpotifyWebApi({clientId:"acc6302297e040aeb6e4ac1fbdfd62c3",clientSecret:"0e8439a1280a43aba9a5bc0a16f3f009"}),Language=require("../language"),Lang=Language.getString("scrapers"),Glang=Language.getString("github"),Slang=Language.getString("lyrics"),Clang=Language.getString("covid"),wiki=require("wikijs").default;var gis=require("g-i-s"),dlang_dsc="",closer_res="",dlang_lang="",dlang_similarity="",dlang_other="",dlang_input="";if("TR"==config.LANG&&(dlang_dsc="Yanıtlanan mesajın dilini tahmin eder.",closer_res="En Yakın Sonuç:",dlang_lang="Dil:",dlang_similarity="Benzerlik:",dlang_other="Diğer Diller",dlang_input="İşlenen Metin:"),"EN"==config.LANG&&(dlang_dsc="Guess the language of the replied message.",closer_res="Closest Result:",dlang_lang="Language:",dlang_similarity="Similarity:",dlang_other="Other Languages",dlang_input="Processed Text:"),"AZ"==config.LANG&&(dlang_dsc="Cavablanan mesajın dilini təxmin edin.",closer_res="Ən yaxın nəticə:",dlang_lang="Dil:",dlang_similarity="Bənzərlik:",dlang_other="Başqa Dillər",dlang_input="İşlənmiş Mətn:"),"ML"==config.LANG&&(dlang_dsc="മറുപടി നൽകിയ സന്ദേശത്തിന്റെ ഭാഷ ess ഹിക്കുക.",closer_res="ഏറ്റവും അടുത്ത ഫലം:",dlang_lang="നാവ്:",dlang_similarity="സമാനത:",dlang_other="മറ്റ് ഭാഷകൾ",dlang_input="പ്രോസസ്സ് ചെയ്ത വാചകം:"),"HI"==config.LANG&&(dlang_dsc="उत्तर दिए गए संदेश की भाषा का अनुमान लगाएं",closer_res="निकटतम परिणाम:",dlang_lang="जुबान:",dlang_similarity="समानता:",dlang_other="अन्य भाषाएँ",dlang_input="संसाधित पाठ:"),"ES"==config.LANG&&(dlang_dsc="Adivina el idioma del mensaje respondido.",closer_res="Resultado más cercano:",dlang_lang="Lengua:",dlang_similarity="Semejanza:",dlang_other="Otros idiomas:",dlang_input="Texto procesado:"),"PT"==config.LANG&&(dlang_dsc="Adivinhe o idioma da mensagem respondida.",closer_res="Resultado mais próximo:",dlang_lang="Língua:",dlang_similarity="Similaridade:",dlang_other="Outras línguas",dlang_input="Texto Processado:"),"ID"==config.LANG&&(dlang_dsc="Tebak bahasa pesan yang dibalas.",closer_res="Hasil Terdekat:",dlang_lang="Lidah:",dlang_similarity="Kesamaan:",dlang_other="Bahasa Lainnya",dlang_input="Teks yang Diproses:"),"RU"==config.LANG&&(dlang_dsc="Угадай язык ответного сообщения.",closer_res="Ближайший результат:",dlang_lang="Язык:",dlang_similarity="Сходствo:",dlang_other="Другие языки",dlang_input="Обработанный текст:"),"off"==config.Auroraxc||"OFF"==config.Auroraxc)if("private"==config.WORKTYPE){Garfield.addXnodes({pattern:"trt(?: |$)(\\S*) ?(\\S*)",desc:Lang.TRANSLATE_DESC,usage:Lang.TRANSLATE_USAGE,fromMe:!0},async(e,a)=>e.reply_message?(ceviri=await translatte(e.reply_message.message,{from:""===a[1]?"auto":a[1],to:""===a[2]?config.LANG:a[2]}),"text"in ceviri?await e.reply("*▶️ "+Lang.LANG+":* ```"+(""===a[1]?"auto":a[1])+"```\n*◀️ "+Lang.FROM+"*: ```"+(""===a[2]?config.LANG:a[2])+"```\n*🔎 "+Lang.RESULT+":* ```"+ceviri.text+"```"):await e.client.sendMessage(e.jid,Lang.TRANSLATE_ERROR,MessageType.text)):await e.client.sendMessage(e.jid,Lang.NEED_REPLY,MessageType.text));var auto_dsc="",alr_on_bio="",alr_off_bio="",succ_on_bio="",succ_off_bio="";"TR"==config.LANG&&(auto_dsc="Biyografinize canlı saat ekleyin!",alr_on_bio="Autobio halihazırda açık!",alr_off_bio="Autobio halihazırda kapalı!",succ_on_bio="Autobio Başarıyla Açıldı!",succ_off_bio="Autobio Başarıyla Kapatıldı!"),"EN"==config.LANG&&(auto_dsc="Add live clock to your bio!",alr_on_bio="Autobio is already open!",alr_off_bio="Autobio is currently closed!",succ_on_bio="Autobio Opened Successfully!",succ_off_bio="Autobio Closed Successfully!"),"AZ"==config.LANG&&(auto_dsc="Bio-ya canlı saat əlavə et!",alr_on_bio="Autobio hazırda açıqdır!",alr_off_bio="Autobio hazırda bağlıdır!",succ_on_bio="Autobio Uğurla Açıldı!",succ_off_bio="Autobio Uğurla Bağlandı!"),"HI"==config.LANG&&(auto_dsc="अपने बायो में लाइव घड़ी जोड़ें!",alr_on_bio="Autobio पहले से ही खुला है!",alr_off_bio="Autobio वर्तमान में बंद है!",succ_on_bio="Autobio सफलतापूर्वक खोला गया!",succ_off_bio="Autobio सफलतापूर्वक बंद!"),"ML"==config.LANG&&(auto_dsc="നിങ്ങളുടെ ബയോയിലേക്ക് തത്സമയ ക്ലോക്ക് ചേർക്കുക!",alr_on_bio="Autobio ഇതിനകം തുറന്നു!",alr_off_bio="Autobio നിലവിൽ അടച്ചിരിക്കുന്നു!",succ_on_bio="Autobio വിജയകരമായി തുറന്നു!",succ_off_bio="Autobio വിജയകരമായി അടച്ചു!"),"PT"==config.LANG&&(auto_dsc="Adicione um relógio ao vivo à sua biografia!",alr_on_bio="O Autobio já está aberto!",alr_off_bio="Autobio está fechado no momento!",succ_on_bio="Autobio aberto com sucesso!",succ_off_bio="Autobio fechado com sucesso!"),"RU"==config.LANG&&(auto_dsc="Добавьте живые часы в свою биографию!",alr_on_bio="Autobio уже открыт!",alr_off_bio="Autobio сейчас закрыт!",succ_on_bio="Autobio успешно открыт!",succ_off_bio="Autobio успешно закрыт!"),"ES"==config.LANG&&(auto_dsc="¡Agrega un reloj en vivo a tu biografía!",alr_on_bio="¡Autobio ya está abierto!",alr_off_bio="¡Autobio está cerrado actualmente!",succ_on_bio="¡Autobio se abrió con éxito!",succ_off_bio="Autobio cerrado correctamente!"),"ID"==config.LANG&&(auto_dsc="Tambahkan jam langsung ke bio Anda!",alr_on_bio="Autobio sudah terbuka!",alr_off_bio="Autobio saat ini ditutup!",succ_on_bio="Autobio Berhasil Dibuka!",succ_off_bio="Autobio Berhasil Ditutup!"),Garfield.addXnodes({pattern:"autobio ?(.*)",fromMe:!0,desc:auto_dsc,usage:".autobio on / off"},async(e,a)=>{const s=`${config.AUTOBİO}`;if("on"==a[1]){if("true"==s)return await e.client.sendMessage(e.jid,"*"+alr_on_bio+"*",MessageType.text);await heroku.patch(baseURI+"/config-vars",{body:{"AUTO_BİO":"true"}}),await e.client.sendMessage(e.jid,"*"+succ_on_bio+"*",MessageType.text)}else if("off"==a[1]){if("true"!==s)return await e.client.sendMessage(e.jid,"*"+alr_off_bio+"*",MessageType.text);await heroku.patch(baseURI+"/config-vars",{body:{"AUTO_BİO":"false"}}),await e.client.sendMessage(e.jid,"*"+succ_off_bio+"*",MessageType.text)}}),Garfield.addXnodes({pattern:"detectlang$",fromMe:!0,desc:dlang_dsc},async(e,a)=>{if(!e.reply_message)return await e.client.sendMessage(e.jid,Lang.NEED_REPLY,MessageType.text);const s=e.reply_message.text;var t=lngDetector.detect(s);async function r(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}var n=await r(t[0][0]),i=t[0][1].toString(),o=await r(t[1][0]),l=t[1][1].toString(),c=await r(t[2][0]),p=t[2][1].toString(),d=await r(t[3][0]),g=t[3][1].toString();const y="*"+dlang_input+"* _"+s+"_ \n"+("*"+closer_res+"* _"+n+"_\n*"+dlang_similarity+"* _"+i+"_ \n\n")+("```[ "+dlang_other+" ]```\n\n")+("#2 *"+dlang_lang+"* _"+o+"_\n*"+dlang_similarity+"* _"+l+"_ \n")+("#3 *"+dlang_lang+"* _"+c+"_\n*"+dlang_similarity+"* _"+p+"_ \n")+("#4 *"+dlang_lang+"* _"+d+"_\n*"+dlang_similarity+"* _"+g+"_");await e.client.sendMessage(e.jid,y,MessageType.text)}),Garfield.addXnodes({pattern:"currency(?: ([0-9.]+) ([a-zA-Z]+) ([a-zA-Z]+)|$|(.*))",fromMe:!0},async(e,a)=>{if(void 0===a[1]||null==a[2]||null==a[3])return await e.client.sendMessage(e.jid,Lang.CURRENCY_ERROR,MessageType.text);let s={amount:parseFloat(a[1]).toFixed(2).replace(/\.0+$/,""),from:a[2].toUpperCase(),to:a[3].toUpperCase()};try{result=await exchangeRates().latest().symbols([s.to]).base(s.from).fetch(),result=parseFloat(result).toFixed(2).replace(/\.0+$/,""),await e.reply(`\`\`\`${s.amount} ${s.from} = ${result} ${s.to}\`\`\``)}catch(a){a instanceof ExchangeRatesError?await e.client.sendMessage(e.jid,Lang.INVALID_CURRENCY,MessageType.text):(await e.client.sendMessage(e.jid,Lang.UNKNOWN_ERROR,MessageType.text),console.log(a))}}),"TR"==config.LANG||config.LANG,Garfield.addXnodes({pattern:"tts (.*)",fromMe:!0,desc:Lang.TTS_DESC},async(e,a)=>{if(void 0===a[1]||""==a[1])return;let s="si",t=a[1],r=1;(langMatch=a[1].match("\\{([a-z]{2})\\}"))&&(s=langMatch[1],t=t.replace(langMatch[0],"")),(speedMatch=a[1].match("\\{([0].[0-9]+)\\}"))&&(r=parseFloat(speedMatch[1]),t=t.replace(speedMatch[0],""));var n=await googleTTS.synthesize({text:t,voice:s});await e.client.sendMessage(e.jid,n,MessageType.audio,{mimetype:Mimetype.mp4Audio,ptt:!0})}),Garfield.addXnodes({pattern:"song ?(.*)",fromMe:!0,desc:Lang.SONG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_TEXT_SONG,MessageType.text);let s=await yts(a[1]);if((s=s.all).length<1)return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text);await e.client.sendMessage(e.jid,Lang.DOWNLOADING_SONG,MessageType.text);let t=s[0].title.replace(" ","+"),r=ytdl(s[0].videoId,{quality:"lowestaudio"});got.stream(s[0].image).pipe(fs.createWriteStream(t+".jpg")),ffmpeg(r).audioBitrate(128).save("./"+t+".mp3").on("end",async()=>{const a=new ID3Writer(fs.readFileSync("./"+t+".mp3"));a.setFrame("TIT2",s[0].title).setFrame("TPE1",[s[0].author.name]).setFrame("APIC",{type:3,data:fs.readFileSync(t+".jpg"),description:s[0].description}),a.addTag(),await e.client.sendMessage(e.jid,Lang.UPLOADING_SONG,MessageType.text),await e.client.sendMessage(e.jid,Buffer.from(a.arrayBuffer),MessageType.audio,{mimetype:Mimetype.mp4Audio,ptt:!1})})}),Garfield.addXnodes({pattern:"number",fromMe:!1,desc:Lang.NUMBER},async(e,a)=>{const s="BEGIN:VCARD\nVERSION:6.0\nFN:"+xv364.OA_NAME+"\nORG:Coded by Tharindu Liyanage;\nTEL;type=CELL;type=VOICE;waid="+xv364.PHONE+":"+xv364.PHONE+" \nEND:VCARD";await e.client.sendMessage(e.jid,{displayname:"Garfield",vcard:s},MessageType.contact)}),Garfield.addXnodes({pattern:"video ?(.*)",fromMe:!0,desc:Lang.VIDEO_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_VIDEO,MessageType.text);var s="";try{if(a[1].includes("watch")){var t=a[1].replace("watch?v=","").split("/")[3];s=t}else s=a[1].split("/")[3]}catch{return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text)}await e.client.sendMessage(e.jid,Lang.DOWNLOADING_VIDEO,MessageType.text);var r=ytdl(s,{filter:e=>"mp4"===e.container&&["480p","360p","240p","144p"].map(()=>!0)});r.pipe(fs.createWriteStream("./"+s+".mp4")),r.on("end",async()=>{await e.client.sendMessage(e.jid,Lang.UPLOADING_VIDEO,MessageType.text),await e.client.sendMessage(e.jid,fs.readFileSync("./"+s+".mp4"),MessageType.video,{mimetype:Mimetype.mp4})})}),Garfield.addXnodes({pattern:"yt ?(.*)",fromMe:!0,desc:Lang.YT_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);var s=await e.client.sendMessage(e.jid,Lang.GETTING_VIDEOS,MessageType.text);try{var t=await yts(a[1])}catch{return await e.client.sendMessage(e.jid,Lang.NOT_FOUND,MessageType.text)}var r="";t.all.map(e=>{r+="*"+e.title+"* - "+e.url+"\n"}),await e.client.sendMessage(e.jid,r,MessageType.text),await s.delete()}),Garfield.addXnodes({pattern:"wiki ?(.*)",fromMe:!0,desc:Lang.WIKI_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);var s=await e.client.sendMessage(e.jid,Lang.SEARCHING,MessageType.text),t=await wiki({apiUrl:"https://"+config.LANG+".wikipedia.org/w/api.php"}).page(a[1]),r=await t.rawContent();await e.client.sendMessage(e.jid,r,MessageType.text),await s.delete()}),Garfield.addXnodes({pattern:"img ?(.*)",fromMe:!0,desc:Lang.IMG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);gis(a[1],async(s,t)=>{for(var r=0;r<(t.length<5?t.length:5);r++){got(t[r].url,{https:{rejectUnauthorized:!1}}).buffer().then(async a=>{await e.client.sendMessage(e.jid,a,MessageType.image)})}e.reply(Lang.IMG.format(t.length<5?t.length:5,a[1]))})}),Garfield.addXnodes({pattern:"github ?(.*)",fromMe:!0,desc:Glang.GİTHUB_DESC},async(e,a)=>{const s=a[1];if(""===s)return await e.client.sendMessage(e.jid,Glang.REPLY,MessageType.text);await axios.get(`https://videfikri.com/api/github/?username=${s}`).then(async a=>{const{hireable:s,company:t,profile_pic:r,username:n,fullname:i,blog:o,location:l,email:c,public_repository:p,biografi:d,following:g,followers:y,public_gists:u,profile_url:T,last_updated:f,joined_on:h}=a.data.result,$=await axios.get(r,{responseType:"arraybuffer"}),m=`*${Glang.USERNAME}* ${n} \n*${Glang.NAME}* ${i} \n*${Glang.FOLLOWERS}* ${y} \n*${Glang.FOLLOWİNG}* ${g} \n*${Glang.BİO}* ${d} \n*${Glang.REPO}* ${p} \n*${Glang.GİST}* ${u} \n*${Glang.LOCATİON}* ${l} \n*${Glang.MAİL}* ${c} \n*${Glang.BLOG}* ${o} \n*${Glang.COMPANY}* ${t} \n*${Glang.HİRE}* ${"true"===s?Glang.HİRE_TRUE:Glang.HİRE_FALSE} \n*${Glang.JOİN}* ${h} \n*${Glang.UPDATE}* ${f} \n*${Glang.URL}* ${T}`;await e.sendMessage(Buffer.from($.data),MessageType.image,{caption:m})}).catch(async a=>await e.client.sendMessage(e.jid,Glang.NOT,MessageType.text))}),Garfield.addXnodes({pattern:"lyric ?(.*)",fromMe:!0,desc:Slang.LY_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Slang.NEED,MessageType.text);var s=await solenolyrics.requestLyricsFor(`${a[1]}`),t=await solenolyrics.requestAuthorFor(`${a[1]}`),r=await solenolyrics.requestIconFor(`${a[1]}`),n=await solenolyrics.requestTitleFor(`${a[1]}`),i=await axios.get(r,{responseType:"arraybuffer"});await e.client.sendMessage(e.jid,Buffer.from(i.data),MessageType.image,{caption:`*${Slang.ARAT}* `+"```"+`${a[1]}`+"```"+`\n*${Slang.BUL}* `+"```"+n+"```"+`\n*${Slang.AUT}* `+"```"+t+"```"+`\n*${Slang.SLY}*\n\n`+s})}),Garfield.addXnodes({pattern:"covid ?(.*)",fromMe:!0,desc:Clang.COV_DESC},async(e,a)=>{if(""===a[1])try{await got("https://coronavirus-19-api.herokuapp.com/all").then(async a=>{const s=JSON.parse(a.body);await e.reply(`🌍 *World-Wide Results:*\n🌐 *Total Cases:* ${s.cases}\n☠️ *Total Deaths:* ${s.deaths}\n⚕️ *Total Recovered:* ${s.recovered}`)})}catch(a){await e.reply(`Error :\n${a.message}`,MessageType.text)}else if("tr"===a[1]||"Tr"===a[1]||"TR"===a[1]||a[1].includes("turkiye")||a[1].includes("türkiye")||a[1].includes("türk"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Turkey").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇹🇷 *Türkiye İçin Sonuçlar:*\n😷 *Toplam Vaka:* ${resp.cases}\n🏥 *Günlük Hasta:* ${resp.todayCases}\n⚰️ *Toplam Ölü:* ${resp.deaths}\n☠️ *Günlük Ölü:* ${resp.todayDeaths}\n💊 *Toplam İyileşen:* ${resp.recovered}\n😷 *Aktif Vaka:* ${resp.active}\n🆘 *Ağır Hasta:* ${resp.critical}\n🧪 *Toplam Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Bir Hata Oluştu, İşte Hata : \n${a.message}`,MessageType.text)}else if("usa"===a[1]||"Usa"===a[1]||"USA"===a[1]||"america"===a[1]||"America"===a[1])try{await got("https://coronavirus-19-api.herokuapp.com/countries/USA").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇺🇲 *Datas for USA:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("de"===a[1]||"De"===a[1]||"DE"===a[1]||"Germany"===a[1]||"germany"===a[1]||a[1].includes("deutschland"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Germany").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇩🇪 *Daten für Deutschland:*\n😷 *Fälle İnsgesamt:* ${resp.cases}\n🏥 *Tägliche Fälle:* ${resp.todayCases}\n⚰️ *Totale Todesfälle:* ${resp.deaths}\n☠️ *Tägliche Todesfälle:* ${resp.todayDeaths}\n💊 *Insgesamt Wiederhergestellt:* ${resp.recovered}\n😷 *Aktuelle Fälle:* ${resp.active}\n🆘 *Kritische Fälle:* ${resp.critical}\n🧪 *Gesamttests:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("az"===a[1]||"AZ"===a[1]||"Az"===a[1]||a[1].includes("azerbaycan")||a[1].includes("azeri"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Azerbaijan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇦🇿 *Azərbaycan üçün məlumatlar:*\n😷 *Ümumi Baş Tutan Hadisə:* ${resp.cases}\n🏥 *Günlük Xəstə:* ${resp.todayCases}\n⚰️ *Ümumi Ölüm:* ${resp.deaths}\n☠️ *Günlük Ölüm:* ${resp.todayDeaths}\n💊 *Ümumi Sağalma:* ${resp.recovered}\n😷 *Aktiv Xəstə Sayı:* ${resp.active}\n🆘 *Ağır Xəstə Sayı:* ${resp.critical}\n🧪 *Ümumi Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("uk"===a[1]||"Uk"===a[1]||"UK"===a[1]||"United"===a[1]||a[1].includes("kingdom"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/UK").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇬🇧 *Datas for UK:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("in"===a[1]||"ın"===a[1]||"In"===a[1]||"İn"===a[1]||"IN"===a[1]||"İN"===a[1]||"india"===a[1]||"India"===a[1]||a[1].includes("indian"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/India").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇮🇳 *भारत के लिए डेटा:*\n😷 *कुल मामले:* ${resp.cases}\n🏥 *दैनिक मामले:* ${resp.todayCases}\n⚰️ *कुल मौतें:* ${resp.deaths}\n☠️ *रोज की मौत:* ${resp.todayDeaths}\n💊 *कुल बरामद:* ${resp.recovered}\n😷 *एक्टिव केस:* ${resp.active}\n🆘 *गंभीर मामले:* ${resp.critical}\n🧪 *कुल टेस्ट:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("cn"===a[1]||"Cn"===a[1]||"CN"===a[1]||a[1].includes("china"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/China").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇨🇳 *Datas for China:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("gr"===a[1]||"Gr"===a[1]||"GR"===a[1]||a[1].includes("greek"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Greece").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇬🇷 *Datas for Greece:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("fr"===a[1]||"Fr"===a[1]||"FR"===a[1]||a[1].includes("france"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/France").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇫🇷 *Datas for France:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("jp"===a[1]||"Jp"===a[1]||"JP"===a[1]||a[1].includes("japan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Japan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇯🇵 *Datas for Japan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("kz"===a[1]||"Kz"===a[1]||"KZ"===a[1]||a[1].includes("kazakistan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Kazakhstan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇰🇿 *Datas for Kazakhstan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("pk"===a[1]||"Pk"===a[1]||"PK"===a[1]||a[1].includes("pakistan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Pakistan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇵🇰 *Datas for Pakistan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("ru"===a[1]||"Ru"===a[1]||"RU"===a[1]||a[1].includes("russia"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Russia").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇷🇺 *Datas for Russia:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("id"===a[1]||"İd"===a[1]||"İD"===a[1]||"ıd"===a[1]||"Id"===a[1]||"ID"===a[1]||a[1].includes("ındonesia"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Indonesia").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇮🇩 *Datas for Indonesia:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else{if("nl"!==a[1]&&"Nl"!==a[1]&&"NL"!==a[1]&&!a[1].includes("netherland"))return await e.client.sendMessage(e.jid,Clang.NOT,MessageType.text);try{await got("https://coronavirus-19-api.herokuapp.com/countries/Netherlands").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇳🇱 *Datas for Netherlands:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}}})}else"public"==config.WORKTYPE&&(Garfield.addXnodes({pattern:"trt(?: |$)(\\S*) ?(\\S*)",desc:Lang.TRANSLATE_DESC,usage:Lang.TRANSLATE_USAGE,fromMe:!1},async(e,a)=>e.reply_message?(ceviri=await translatte(e.reply_message.message,{from:""===a[1]?"auto":a[1],to:""===a[2]?config.LANG:a[2]}),"text"in ceviri?await e.reply("*▶️ "+Lang.LANG+":* ```"+(""===a[1]?"auto":a[1])+"```\n*◀️ "+Lang.FROM+"*: ```"+(""===a[2]?config.LANG:a[2])+"```\n*🔎 "+Lang.RESULT+":* ```"+ceviri.text+"```"):await e.client.sendMessage(e.jid,Lang.TRANSLATE_ERROR,MessageType.text)):await e.client.sendMessage(e.jid,Lang.NEED_REPLY,MessageType.text)),Garfield.addXnodes({pattern:"detectlang$",fromMe:!1,desc:dlang_dsc},async(e,a)=>{if(!e.reply_message)return await e.client.sendMessage(e.jid,Lang.NEED_REPLY,MessageType.text);const s=e.reply_message.text;var t=lngDetector.detect(s);async function r(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}var n=await r(t[0][0]),i=t[0][1].toString(),o=await r(t[1][0]),l=t[1][1].toString(),c=await r(t[2][0]),p=t[2][1].toString(),d=await r(t[3][0]),g=t[3][1].toString();const y="*"+dlang_input+"* _"+s+"_ \n"+("*"+closer_res+"* _"+n+"_\n*"+dlang_similarity+"* _"+i+"_ \n\n")+("```[ "+dlang_other+" ]```\n\n")+("#2 *"+dlang_lang+"* _"+o+"_\n*"+dlang_similarity+"* _"+l+"_ \n")+("#3 *"+dlang_lang+"* _"+c+"_\n*"+dlang_similarity+"* _"+p+"_ \n")+("#4 *"+dlang_lang+"* _"+d+"_\n*"+dlang_similarity+"* _"+g+"_");await e.client.sendMessage(e.jid,y,MessageType.text,{quoted:e.data})}),Garfield.addXnodes({pattern:"currency(?: ([0-9.]+) ([a-zA-Z]+) ([a-zA-Z]+)|$|(.*))",fromMe:!1},async(e,a)=>{if(void 0===a[1]||null==a[2]||null==a[3])return await e.client.sendMessage(e.jid,Lang.CURRENCY_ERROR,MessageType.text);let s={amount:parseFloat(a[1]).toFixed(2).replace(/\.0+$/,""),from:a[2].toUpperCase(),to:a[3].toUpperCase()};try{result=await exchangeRates().latest().symbols([s.to]).base(s.from).fetch(),result=parseFloat(result).toFixed(2).replace(/\.0+$/,""),await e.reply(`\`\`\`${s.amount} ${s.from} = ${result} ${s.to}\`\`\``)}catch(a){a instanceof ExchangeRatesError?await e.client.sendMessage(e.jid,Lang.INVALID_CURRENCY,MessageType.text):(await e.client.sendMessage(e.jid,Lang.UNKNOWN_ERROR,MessageType.text),console.log(a))}}),Garfield.addXnodes({pattern:"tts (.*)",fromMe:!1,desc:Lang.TTS_DESC},async(e,a)=>{if(void 0===a[1]||""==a[1])return;let s="si",t=a[1],r=1;(langMatch=a[1].match("\\{([a-z]{2})\\}"))&&(s=langMatch[1],t=t.replace(langMatch[0],"")),(speedMatch=a[1].match("\\{([0].[0-9]+)\\}"))&&(r=parseFloat(speedMatch[1]),t=t.replace(speedMatch[0],""));var n=await googleTTS.synthesize({text:t,voice:s});await e.client.sendMessage(e.jid,n,MessageType.audio,{mimetype:Mimetype.mp4Audio,quoted:e.data,ptt:!0})}),Garfield.addXnodes({pattern:"play ?(.*)",fromMe:!1,desc:Lang.SONG_DESC},async(e,a)=>{if("905524317852-1612300121@g.us"===e.jid)return;if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_TEXT_SONG,MessageType.text);let s=await yts(a[1]);if((s=s.all).length<1)return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text);await e.client.sendMessage(e.jid,Lang.DOWNLOADING_SONG,MessageType.text);let t=s[0].title.replace(" ","+"),r=ytdl(s[0].videoId,{quality:"highestaudio"});got.stream(s[0].image).pipe(fs.createWriteStream(t+".jpg")),ffmpeg(r).audioBitrate(128).save("./"+t+".mp3").on("end",async()=>{const a=new ID3Writer(fs.readFileSync("./"+t+".mp3"));a.setFrame("TIT2",s[0].title).setFrame("TPE1",[s[0].author.name]).setFrame("APIC",{type:3,data:fs.readFileSync(t+".jpg"),description:s[0].description}),a.addTag(),await e.client.sendMessage(e.jid,fs.readFileSync("./"+t+".jpg"),MessageType.image,{caption:"\n```Title -```\n*"+t+"*\n```Wait Uploading```"}),await e.client.sendMessage(e.jid,Buffer.from(a.arrayBuffer),MessageType.audio,{mimetype:Mimetype.mp4Audio,contextInfo:{forwardingScore:1,isForwarded:!1},quoted:e.data,ptt:!1})})}),Garfield.addXnodes({pattern:"song ?(.*)",fromMe:!1,desc:Lang.SONG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_TEXT_SONG,MessageType.text);let s=await yts(a[1]);if((s=s.all).length<1)return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text);await e.client.sendMessage(e.jid,Lang.DOWNLOADING_SONG,MessageType.text);let t=s[0].title.replace(" ","+"),r=ytdl(s[0].videoId,{quality:"highestaudio"});got.stream(s[0].image).pipe(fs.createWriteStream(t+".jpg")),ffmpeg(r).audioBitrate(320).save("./"+t+".mp3").on("end",async()=>{const a=new ID3Writer(fs.readFileSync("./"+t+".mp3"));a.setFrame("TIT2",s[0].title).setFrame("TPE1",[s[0].author.name]).setFrame("APIC",{type:3,data:fs.readFileSync(t+".jpg"),description:s[0].description}),a.addTag(),await e.client.sendMessage(e.jid,fs.readFileSync("./"+t+".jpg"),MessageType.image,{caption:"\n```Title -```\n*"+t+"*\n```Wait Uploading```"}),await e.client.sendMessage(e.jid,Buffer.from(a.arrayBuffer),MessageType.audio,{mimetype:Mimetype.mp4Audio,ptt:!1})})}),Garfield.addXnodes({pattern:"video ?(.*)",fromMe:!1,desc:Lang.VIDEO_DESC},async(e,a)=>{if("905524317852-1612300121@g.us"!==e.jid){if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_VIDEO,MessageType.text);try{var s=await yts({videoId:ytdl.getURLVideoID(a[1])})}catch{return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text)}await e.client.sendMessage(e.jid,Lang.DOWNLOADING_VIDEO,MessageType.text);var t=ytdl(s.videoId,{filter:e=>"mp4"===e.container&&["720p","480p","360p","240p","144p"].map(()=>!0)});t.pipe(fs.createWriteStream("./"+s.videoId+".mp4")),t.on("end",async()=>{await e.client.sendMessage(e.jid,Lang.UPLOADING_VIDEO,MessageType.text),await e.client.sendMessage(e.jid,fs.readFileSync("./"+s.videoId+".mp4"),MessageType.video,{mimetype:Mimetype.mp4,contextInfo:{forwardingScore:1,isForwarded:!1},quoted:e.data,caption:"\n```Title -```\n*"+s.title+"*\n"})})}}),Garfield.addXnodes({pattern:"yt ?(.*)",fromMe:!1,desc:Lang.YT_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);var s=await e.client.sendMessage(e.jid,Lang.GETTING_VIDEOS,MessageType.text);try{var t=await yts(a[1])}catch{return await e.client.sendMessage(e.jid,Lang.NOT_FOUND,MessageType.text)}var r="";t.all.map(e=>{r+="*"+e.title+"* - "+e.url+"\n"}),await e.client.sendMessage(e.jid,r,MessageType.text),await s.delete()}),Garfield.addXnodes({pattern:"wiki ?(.*)",fromMe:!1,desc:Lang.WIKI_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);var s=await e.client.sendMessage(e.jid,Lang.SEARCHING,MessageType.text),t=await wiki({apiUrl:"https://"+config.LANG+".wikipedia.org/w/api.php"}).page(a[1]),r=await t.rawContent();await e.client.sendMessage(e.jid,r,MessageType.text),await s.delete()}),Garfield.addXnodes({pattern:"img ?(.*)",fromMe:!1,desc:Lang.IMG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_WORDS,MessageType.text);if(!a[1].includes(" & "))return await e.client.sendMessage(e.jid," ```please enter the number of images you need \n\n example :``` *name of image* & *number of image* ",MessageType.text);if(a[1].includes(" & ")){var s=a[1].split(" & "),t=s[1],r=s[0];if(t>10)return await e.client.sendMessage(e.jid,"```please decrease the number of images```",MessageType.text);gis(r,async(a,s)=>{for(var n=0;n<(s.length<t?s.length:t);n++){got(s[n].url,{https:{rejectUnauthorized:!1}}).buffer().then(async a=>{await e.client.sendMessage(e.jid,a,MessageType.image)})}e.reply(Lang.IMG.format(s.length<t?s.length:t,r))})}}),Garfield.addXnodes({pattern:"isong ?(.*)",fromMe:!1,desc:Lang.ISONG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_TEXT_SONG,MessageType.text);let s=await yts(a[1]);if((s=s.all).length<1)return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text);await e.client.sendMessage(e.jid,Lang.DOWNLOADING_SONG,MessageType.text);let t=s[0].title.replace(" ","+"),r=ytdl(s[0].videoId,{quality:"lowestaudio"});got.stream(s[0].image).pipe(fs.createWriteStream(t+".jpg")),ffmpeg(r).audioBitrate(64).save("./"+t+".mp3").on("end",async()=>{const a=new ID3Writer(fs.readFileSync("./"+t+".mp3"));a.setFrame("TIT2",s[0].title).setFrame("TPE1",[s[0].author.name]).setFrame("APIC",{type:3,data:fs.readFileSync(t+".jpg"),description:s[0].description}),a.addTag(),await e.client.sendMessage(e.jid,fs.readFileSync("./"+t+".jpg"),MessageType.image,{caption:"\n*Song Name -*\n*"+t+" 🐼*\n\n"+Lang.UPLOADING_SONG+"\n"}),await e.client.sendMessage(e.jid,Buffer.from(a.arrayBuffer),MessageType.document,{filename:"Garfield v6.0.mp3",mimetype:"audio/mpeg",quoted:e.data})})}),Garfield.addXnodes({pattern:"githxjdjub ?(.*)",fromMe:!1,desc:Glang.GİTHUB_DESC},async(e,a)=>{const s=a[1];if(""===s)return await e.client.sendMessage(e.jid,Glang.REPLY,MessageType.text);await axios.get(`https://videfikri.com/api/github/?username=${s}`).then(async a=>{const{hireable:s,company:t,profile_pic:r,username:n,fullname:i,blog:o,location:l,email:c,public_repository:p,biografi:d,following:g,followers:y,public_gists:u,profile_url:T,last_updated:f,joined_on:h}=a.data.result,$=await axios.get(r,{responseType:"arraybuffer"}),m=`*${Glang.USERNAME}* ${n} \n*${Glang.NAME}* ${i} \n*${Glang.FOLLOWERS}* ${y} \n*${Glang.FOLLOWİNG}* ${g} \n*${Glang.BİO}* ${d} \n*${Glang.REPO}* ${p} \n*${Glang.GİST}* ${u} \n*${Glang.LOCATİON}* ${l} \n*${Glang.MAİL}* ${c} \n*${Glang.BLOG}* ${o} \n*${Glang.COMPANY}* ${t} \n*${Glang.HİRE}* ${"true"===s?Glang.HİRE_TRUE:Glang.HİRE_FALSE} \n*${Glang.JOİN}* ${h} \n*${Glang.UPDATE}* ${f} \n*${Glang.URL}* ${T}`;await e.sendMessage(Buffer.from($.data),MessageType.image,{caption:m})}).catch(async a=>await e.client.sendMessage(e.jid,Glang.NOT,MessageType.text))}),Garfield.addXnodes({pattern:"number",fromMe:!1,desc:Lang.NUMBER},async(e,a)=>{const s="BEGIN:VCARD\nVERSION:6.0\nFN:"+xv364.OA_NAME+"\nORG:Coded By Tharindu Liyanage;\nTEL;type=CELL;type=VOICE;waid="+xv364.PHONE+":"+xv364.PHONE+" \nEND:VCARD";await e.client.sendMessage(e.jid,{displayname:"Garfield",vcard:s},MessageType.contact)}),Garfield.addXnodes({pattern:"lyxjxjric ?(.*)",fromMe:!1,desc:Slang.LY_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Slang.NEED,MessageType.text);var s=await solenolyrics.requestLyricsFor(`${a[1]}`),t=await solenolyrics.requestAuthorFor(`${a[1]}`),r=await solenolyrics.requestIconFor(`${a[1]}`),n=await solenolyrics.requestTitleFor(`${a[1]}`),i=await axios.get(r,{responseType:"arraybuffer"});await e.client.sendMessage(e.jid,Buffer.from(i.data),MessageType.image,{caption:`*${Slang.ARAT}* `+"```"+`${a[1]}`+"```"+`\n*${Slang.BUL}* `+"```"+n+"```"+`\n*${Slang.AUT}* `+"```"+t+"```"+`\n*${Slang.SLY}*\n\n`+s})}),Garfield.addXnodes({pattern:"sing ?(.*)",fromMe:!1,desc:Lang.SONG_DESC},async(e,a)=>{if(""===a[1])return await e.client.sendMessage(e.jid,Lang.NEED_TEXT_SONG,MessageType.text);let s=await yts(a[1]);if((s=s.all).length<1)return await e.client.sendMessage(e.jid,Lang.NO_RESULT,MessageType.text);await e.client.sendMessage(e.jid,Lang.DOWNLOADING_SONG,MessageType.text);let t=s[0].title.replace(" ","+"),r=ytdl(s[0].videoId,{quality:"lowestaudio"});got.stream(s[0].image).pipe(fs.createWriteStream(t+".jpg")),ffmpeg(r).audioBitrate(64).save("./"+t+".mp3").on("end",async()=>{const a=new ID3Writer(fs.readFileSync("./"+t+".mp3"));a.setFrame("TIT2",s[0].title).setFrame("TPE1",[s[0].author.name]).setFrame("APIC",{type:3,data:fs.readFileSync(t+".jpg"),description:s[0].description}),a.addTag(),await e.client.sendMessage(e.jid,Lang.UPLOADING_SONG,MessageType.text),await e.client.sendMessage(e.jid,Buffer.from(a.arrayBuffer),MessageType.audio,{mimetype:Mimetype.mp4Audio,ptt:!0})})}),Garfield.addXnodes({pattern:"covid ?(.*)",fromMe:!1,desc:Clang.COV_DESC},async(e,a)=>{if(""===a[1])try{await got("https://coronavirus-19-api.herokuapp.com/all").then(async a=>{const s=JSON.parse(a.body);await e.reply(`🌍 *World-Wide Results:*\n🌐 *Total Cases:* ${s.cases}\n☠️ *Total Deaths:* ${s.deaths}\n⚕️ *Total Recovered:* ${s.recovered}`)})}catch(a){await e.reply(`Error :\n${a.message}`,MessageType.text)}else if("tr"===a[1]||"Tr"===a[1]||"TR"===a[1]||a[1].includes("turkiye")||a[1].includes("türkiye")||a[1].includes("türk"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Turkey").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇹🇷 *Türkiye İçin Sonuçlar:*\n😷 *Toplam Vaka:* ${resp.cases}\n🏥 *Günlük Hasta:* ${resp.todayCases}\n⚰️ *Toplam Ölü:* ${resp.deaths}\n☠️ *Günlük Ölü:* ${resp.todayDeaths}\n💊 *Toplam İyileşen:* ${resp.recovered}\n😷 *Aktif Vaka:* ${resp.active}\n🆘 *Ağır Hasta:* ${resp.critical}\n🧪 *Toplam Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Bir Hata Oluştu, İşte Hata : \n${a.message}`,MessageType.text)}else if("usa"===a[1]||"Usa"===a[1]||"USA"===a[1]||"america"===a[1]||"America"===a[1])try{await got("https://coronavirus-19-api.herokuapp.com/countries/USA").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇺🇲 *Datas for USA:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("de"===a[1]||"De"===a[1]||"DE"===a[1]||"Germany"===a[1]||"germany"===a[1]||a[1].includes("deutschland"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Germany").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇩🇪 *Daten für Deutschland:*\n😷 *Fälle İnsgesamt:* ${resp.cases}\n🏥 *Tägliche Fälle:* ${resp.todayCases}\n⚰️ *Totale Todesfälle:* ${resp.deaths}\n☠️ *Tägliche Todesfälle:* ${resp.todayDeaths}\n💊 *Insgesamt Wiederhergestellt:* ${resp.recovered}\n😷 *Aktuelle Fälle:* ${resp.active}\n🆘 *Kritische Fälle:* ${resp.critical}\n🧪 *Gesamttests:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("az"===a[1]||"AZ"===a[1]||"Az"===a[1]||a[1].includes("azerbaycan")||a[1].includes("azeri"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Azerbaijan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇦🇿 *Azərbaycan üçün məlumatlar:*\n😷 *Ümumi Baş Tutan Hadisə:* ${resp.cases}\n🏥 *Günlük Xəstə:* ${resp.todayCases}\n⚰️ *Ümumi Ölüm:* ${resp.deaths}\n☠️ *Günlük Ölüm:* ${resp.todayDeaths}\n💊 *Ümumi Sağalma:* ${resp.recovered}\n😷 *Aktiv Xəstə Sayı:* ${resp.active}\n🆘 *Ağır Xəstə Sayı:* ${resp.critical}\n🧪 *Ümumi Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("uk"===a[1]||"Uk"===a[1]||"UK"===a[1]||"United"===a[1]||a[1].includes("kingdom"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/UK").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇬🇧 *Datas for UK:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("in"===a[1]||"ın"===a[1]||"In"===a[1]||"İn"===a[1]||"İN"===a[1]||"IN"===a[1]||"india"===a[1]||"India"===a[1]||a[1].includes("indian"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/India").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇮🇳 *भारत के लिए डेटा:*\n😷 *कुल मामले:* ${resp.cases}\n🏥 *दैनिक मामले:* ${resp.todayCases}\n⚰️ *कुल मौतें:* ${resp.deaths}\n☠️ *रोज की मौत:* ${resp.todayDeaths}\n💊 *कुल बरामद:* ${resp.recovered}\n😷 *एक्टिव केस:* ${resp.active}\n🆘 *गंभीर मामले:* ${resp.critical}\n🧪 *कुल टेस्ट:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("cn"===a[1]||"Cn"===a[1]||"CN"===a[1]||a[1].includes("china"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/China").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇨🇳 *Datas for China:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("gr"===a[1]||"Gr"===a[1]||"GR"===a[1]||a[1].includes("greek"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Greece").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇬🇷 *Datas for Greece:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("fr"===a[1]||"Fr"===a[1]||"FR"===a[1]||a[1].includes("france"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/France").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇫🇷 *Datas for France:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("jp"===a[1]||"Jp"===a[1]||"JP"===a[1]||a[1].includes("japan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Japan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇯🇵 *Datas for Japan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("kz"===a[1]||"Kz"===a[1]||"KZ"===a[1]||a[1].includes("kazakistan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Kazakhstan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇰🇿 *Datas for Kazakhstan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("pk"===a[1]||"Pk"===a[1]||"PK"===a[1]||a[1].includes("pakistan"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Pakistan").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇵🇰 *Datas for Pakistan:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("ru"===a[1]||"Ru"===a[1]||"RU"===a[1]||a[1].includes("russia"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Russia").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇷🇺 *Datas for Russia:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else if("id"===a[1]||"İd"===a[1]||"İD"===a[1]||"ıd"===a[1]||"Id"===a[1]||"ID"===a[1]||a[1].includes("ındonesia"))try{await got("https://coronavirus-19-api.herokuapp.com/countries/Indonesia").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇮🇩 *Datas for Indonesia:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}else{if("lk"!==a[1]&&"Lk"!==a[1]&&"LK"!==a[1]&&!a[1].includes("Sri lanka"))return await e.client.sendMessage(e.jid,Clang.NOT,MessageType.text);try{await got("https://coronavirus-19-api.herokuapp.com/countries/Sri%20Lanka").then(async a=>{resp=JSON.parse(a.body),await e.reply(`🇱🇰 *Datas for Sri Lanka:*\n😷 *Total Cases:* ${resp.cases}\n🏥 *Daily Cases:* ${resp.todayCases}\n⚰️ *Total Deaths:* ${resp.deaths}\n☠️ *Daily Deaths:* ${resp.todayDeaths}\n💊 *Total Recovered:* ${resp.recovered}\n😷 *Active Cases:* ${resp.active}\n🆘 *Critical Cases:* ${resp.critical}\n🧪 *Total Test:* ${resp.totalTests}`)})}catch(a){await e.reply(`Error : \n${a.message}`,MessageType.text)}}}));
